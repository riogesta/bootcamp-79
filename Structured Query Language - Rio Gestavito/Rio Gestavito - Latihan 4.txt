1. Write a query in SQL to list all the information of the actors who played a role in the movie "Annie Hall"

jawaban :
SELECT
    movie.mov_title, actor.act_fname, act_lname, movie_cast.role
FROM 
    movie
INNER JOIN movie_cast ON movie_cast.mov_id = movie.mov_id
INNER JOIN actor ON actor.act_id = movie_cast.act_id
WHERE movie.mov_title = 'Annie Hall'



2. Write a query in SQL to find the name of the director (first and last names) who directed a movie that casted a role for 'Eyes Wide Shut. (using subquery).

jawaban :
SELECT
    (dir_fname||' '||dir_lname) as Director_Name
FROM director
WHERE 
    dir_id = ( SELECT dir_id
                FROM movie_direction
                WHERE mov_id = ( SELECT mov_id 
                                FROM movie 
                                WHERE mov_title = 'Eyes Wide Shut'
                                )
                )


3. Write a query in SQL to list all the movies which released in the country other than UK.

jawaban :
SELECT *
FROM movie
WHERE NOT mov_rel_country = 'UK'



4. Write a query in SQL to find the movie title, year, date of release, director and actor for those movies which reviewer is unknown.

jawaban :
SELECT 
    movie.mov_title, 
    movie.mov_year, 
    movie.mov_dt_rel, 
    (director.dir_fname||' '||director.dir_lname) AS director_name, 
    (actor.act_fname||' '||actor.act_lname) AS actor_name
FROM movie
INNER JOIN movie_direction ON movie_direction.mov_id = movie.mov_id
INNER JOIN movie_cast ON movie_cast.mov_id = movie.mov_id
INNER JOIN director ON director.dir_id = movie_direction.dir_id
INNER JOIN actor ON actor.act_id = movie_cast.act_id
INNER JOIN rating ON rating.mov_id = movie.mov_id
INNER JOIN reviewer ON reviewer.rev_id = rating.rev_id
WHERE reviewer.rev_name IS NULL


5. Write a query in SQL to find the titles of all movies directed by the director whose first and last name are Woddy Allen.

jawaban :
SELECT 
    movie.mov_title
FROM movie
INNER JOIN movie_direction ON movie_direction.mov_id = movie.mov_id
INNER JOIN movie_cast ON movie_cast.mov_id = movie.mov_id
INNER JOIN director ON director.dir_id = movie_direction.dir_id
INNER JOIN actor ON actor.act_id = movie_cast.act_id
INNER JOIN rating ON rating.mov_id = movie.mov_id
INNER JOIN reviewer ON reviewer.rev_id = rating.rev_id
WHERE director.dir_fname = 'Woody' AND director.dir_lname = 'Allen'



6. Write a query in SQL to find all the years which produced at least one movie and that received a rating of more than 3 stars. Show the results in increasing order. 

jawaban :
SELECT DISTINCT
    movie.mov_year, rating.rev_stars
FROM movie, rating
WHERE movie.mov_id = rating.mov_id
AND rating.rev_stars > 3
ORDER BY movie.mov_year



7. Write a query in SQL to find the titles of all movies that have no ratings.

jawaban :
SELECT
    mov_title
FROM movie
WHERE 
    mov_id IN (SELECT mov_id FROM rating WHERE rev_stars IS NULL)
    
    

8. Write a query in SQL to find the names of all reviewers who have ratings with a NULL value.

jawaban :
SELECT rev_name
FROM reviewer
WHERE rev_id IN (SELECT rev_id FROM rating WHERE rev_stars IS NULL)



9. Write a query in SQL to return the reviewer name, movie title, and stars for those movies which reviewed by a reviewer and must be rated. Sort the result by reviewer name, movie title, and number of stars.

jawaban :
SELECT 
    reviewer.rev_name,
    movie.mov_title,
    rating.rev_stars
FROM 
    Reviewer
INNER JOIN 
    Rating ON reviewer.rev_id = rating.rev_id
INNER JOIN 
    Movie ON rating.mov_id = movie.mov_id
WHERE 
    rating.rev_stars IS NOT NULL
    AND reviewer.rev_name IS NOT NULL
ORDER BY 
    reviewer.rev_name, 
    movie.mov_title, 
    rating.rev_stars;



10. Write a query in SQL to find the reviewer's name and the title of the movie for those reviewers who rated more than one movies.

jawaban :
SELECT 
    reviewer.rev_name,
    movie.mov_title
FROM 
    reviewer
INNER JOIN 
    rating ON reviewer.rev_id = rating.rev_id
INNER JOIN 
    movie ON rating.mov_id = movie.mov_id
WHERE 
    rating.rev_id IN (
        SELECT 
            rev_id
        FROM 
            rating
        GROUP BY 
            rev_id
        HAVING 
            COUNT(*) > 1
    );



11. Write a query in SQL to find the movie title, and the highest number of stars that movie received and arranged the result according to the group of a movie and the movie title appear alphabetically in ascending order.

jawaban: 
SELECT 
    movie.mov_title,
    rating.rev_stars
FROM 
    movie
INNER JOIN 
    rating ON movie.mov_id = rating.mov_id
WHERE 
    rating.rev_stars = (SELECT MAX(rev_stars) FROM rating)
ORDER BY 
    movie.mov_title;



12. Write a query in SQL to find the names of all reviewers who rated the movie American Beauty.

jawaban:
SELECT rev_name
FROM reviewer
WHERE rev_id = (SELECT rev_id FROM rating WHERE mov_id = (SELECT mov_id FROM movie WHERE mov_title = 'American Beauty'));



13. Write a query in SQL to find the titles of all movies which have been reviewed by anybody except by Paul Monks.

jawaban :
SELECT mov_title
FROM movie
WHERE mov_id IN (
    SELECT mov_id
    FROM rating
    WHERE rev_id IN (
        SELECT rev_id
        FROM reviewer
        WHERE NOT rev_name = 'Paul Monks'
    )
)
ORDER BY mov_title;



14. Write a query in SQL to return the reviewer name, movie title, and number of stars for those movies which rating is the lowest one.

jawaban :
SELECT reviewer.rev_name, movie.mov_title, rating.rev_stars
FROM reviewer
INNER JOIN rating ON reviewer.rev_id = rating.rev_id
INNER JOIN movie ON rating.mov_id = movie.mov_id
WHERE rating.rev_stars = (SELECT MIN(rev_stars) FROM rating);



15. Write a query in SQL to find the titles of all movies directed by James Cameron.

jawaban :
SELECT mov_title
FROM movie
WHERE mov_id IN (
    SELECT mov_id
    FROM movie_direction
    WHERE dir_id = (
        SELECT dir_id
        FROM director
        WHERE (dir_fname || ' ' || dir_lname) = 'James Cameron'
    )
);


16. Write a query in SQL to find the name of those movies where one or more actors acted in two or more movies.

jawaban :
SELECT mov_title
FROM movie
INNER JOIN movie_cast ON movie.mov_id = movie_cast.mov_id
WHERE movie_cast.act_id IN (
    SELECT act_id
    FROM movie_cast
    GROUP BY act_id
    HAVING COUNT(*) > 1
);

